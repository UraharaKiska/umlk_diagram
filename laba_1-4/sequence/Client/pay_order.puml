@startuml
actor User
boundary OrderForm
boundary PaymentForm
boundary FormSBP
control PaymentController
actor BankSystem
entity Payment


activate OrderForm
User -> OrderForm : (1) pay_order()
OrderForm -> PaymentForm : (2) open_payment_form()
activate PaymentForm
deactivate OrderForm

User -> PaymentForm : (1) start_payment()




PaymentForm -> PaymentForm : (4) select_payment_pop_up()
User -> PaymentForm : (5) select_payment()

alt payment == "Card"
    PaymentForm -> PaymentForm : (6) card_input_pop_up()
    User -> PaymentForm : (7) enter_card_info()
    activate PaymentController
    PaymentForm -> PaymentController : (8) pay_by_card()
    PaymentController -> BankSystem : (9) payment_request()
    BankSystem --> PaymentController : (10) success
    activate Payment
    PaymentController -> Payment : (11) add_payment()
    PaymentController <-- Payment : (12) success
    PaymentController --> PaymentForm : (20) success
    PaymentForm -> PaymentForm : (21) success_message()
    deactivate Payment
    deactivate PaymentController

else payment == "SBP"
   
    PaymentForm -> FormSBP  : (13) open_sbp_form()
    activate FormSBP
    User -> FormSBP : (14) pay_with_sbp()
    FormSBP --> PaymentForm : (14) success()
    deactivate FormSBP
    activate PaymentController
    PaymentForm -> PaymentController : (15) payed_by_sbp()
    activate Payment
    PaymentController -> Payment : (18) add_payment()
    PaymentController <-- Payment : (19) success
    PaymentController --> PaymentForm : (20) success
    PaymentForm -> PaymentForm : (21)  success_message()
    deactivate Payment
    deactivate PaymentController
end


@enduml
